version: "3"

name: monitoring

services:
  grafana:
    container_name: Grafana
    image: grafana/grafana:9.5.1
    hostname: grafana
    restart: unless-stopped
    user: "472"
    networks:
      - monitoring
    ports:
      - "3000:3000"
    env_file:
      - ./grafana/.env
    volumes:
      # /!\ To be modified depending on your needs /!\
      - monitoring_Grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  cadvisor:
    container_name: CAdvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    hostname: cadvisor
    restart: unless-stopped
    privileged: true
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=30s"
      - "--disable_metrics=advtcp,app,cpuLoad,cpu_topology,cpuset,disk,hugetlb,memory_numa,oom_event,percpu,perf_event,process,referenced_memory,resctrl,sched,tcp,udp"
    networks:
      - monitoring
    expose:
      - 8080
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro

  node-exporter:
    container_name: Node-exporter
    image: prom/node-exporter-linux-arm64:v1.5.0
    hostname: exporter
    restart: unless-stopped
    networks:
      - monitoring
    expose:
      - 9100
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave

  prometheus:
    container_name: Prometheus
    image: prom/prometheus-linux-arm64:v2.43.1
    hostname: prometheus
    restart: unless-stopped
    user: "nobody"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - monitoring
    expose:
      - 9090
    volumes:
      # /!\ To be modified depending on your needs /!\
      - monitoring_Prometheus:/prometheus
      - ./prometheus:/etc/prometheus/
    depends_on:
      - cadvisor
      - node-exporter
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  alertmanager:
    container_name: Alertmanager
    image: prom/alertmanager:v0.25.0
    hostname: alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093/'
    networks:
      - monitoring
    expose:
      - 9093
    volumes:
      - monitoring_Alertmanager:/alertmanager
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml

networks:
  monitoring:
    driver: bridge

volumes:
  monitoring_Grafana:
    external: true
  monitoring_Prometheus:
    external: true
  monitoring_Alertmanager:
    external: true